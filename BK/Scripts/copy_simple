#!/bin/bash

# The backup directory, BK is created automatically
# It tars (compresses) the BK folder, names it hostname-date.tar.gz
# You can edit the filepaths below, or make a file backup_files

# Usage ./copy_configs

touch ./backup_files
cat <<EOT >> backup_files
/etc/httpd/conf
/etc/makepkg.conf
/etc/pacman.d/mirrorlist
/etc/php/php.ini
/etc/mysql/my.cnf
/etc/ssh/sshd_config
/home/$USER/.config/xfce4
/home/$USER/.config/Thunar
/home/$USER/Scripts    
/home/$USER/.bash_profile
/home/$USER/.bashrc
/home/$USER/.dir_colors
/home/$USER/.dir_colors_256
/home/$USER/.i3
/home/$USER/.i3status.conf
/home/$USER/.nanorc
/home/$USER/Packages
/home/$USER/Packages.aur
/home/$USER/Scripts
/home/$USER/.xinitrc
/home/$USER/.Xresources
/home/$USER/.Xresources.d
/home/$USER/.config/geany/plugins
/home/$USER/.cache/sessions
/usr/share/mc/skins
/home/$USER/.config/mc
EOT



# List pacman and AUR installs for easy install
# sudo xargs -a Packages pacman -S --noconfirm --needed
pacman -Qqe | grep -vx "$(pacman -Qqm)" > /home/$USER/Packages
pacman -Qqm > /home/$USER/Packages.aur


for i in $(cat ./backup_files)
do
echo "Backing up" $i"..."
cp -a $i ./BK
done

echo "----------------"
echo "Done backing up."



# Make tar from backup files in BK
backup_files=./BK

# Destination of Backup.
dest="."

# Create archive filename.
day=$(date +%Y-%m-%d)
hostname=$(hostname -s)
archive_file="$hostname-$day.tar.gz"

# Print start status message.
echo "Backing up $backup_files to $dest/$archive_file"
date
echo

# Backup The Files using tar.
tar -zcvf $dest/BK/$archive_file $backup_files

# Print end status message.
echo
echo "Backup finished"
date

# cleanup
rm -r ./backup_files

# Long listing of files in $dest to check file sizes.
tree -L 1 ./BK

